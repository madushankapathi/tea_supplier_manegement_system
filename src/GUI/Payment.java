/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Database.DBMS;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.input.DataFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Madushanka
 */
public class Payment extends javax.swing.JFrame {

    /**
     * Creates new form Payment
     */
    public Payment() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField9 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(200, 200, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Payment", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 20), new java.awt.Color(0, 51, 204))); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coustomer ID", "N weight", "Per Kg", "N total", "S Weight", "Per Kg", "S Total", "Tea price", "From Date", "To Date", "Transport fee", "Advance", "Pohora", "Chemicle", "Other C", "Tea Powder", "Grocry", "Poli Rate", "Poli Amount", "Loan p", "After Balance", "Dificit Money", "IoA", "Balance", "P G"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
            jTable1.getColumnModel().getColumn(10).setResizable(false);
            jTable1.getColumnModel().getColumn(11).setResizable(false);
            jTable1.getColumnModel().getColumn(12).setResizable(false);
            jTable1.getColumnModel().getColumn(13).setResizable(false);
            jTable1.getColumnModel().getColumn(14).setResizable(false);
            jTable1.getColumnModel().getColumn(15).setResizable(false);
            jTable1.getColumnModel().getColumn(16).setResizable(false);
            jTable1.getColumnModel().getColumn(17).setResizable(false);
            jTable1.getColumnModel().getColumn(18).setResizable(false);
            jTable1.getColumnModel().getColumn(19).setResizable(false);
            jTable1.getColumnModel().getColumn(20).setResizable(false);
            jTable1.getColumnModel().getColumn(21).setResizable(false);
            jTable1.getColumnModel().getColumn(22).setResizable(false);
            jTable1.getColumnModel().getColumn(23).setResizable(false);
            jTable1.getColumnModel().getColumn(24).setResizable(false);
        }

        jButton3.setBackground(new java.awt.Color(255, 102, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Calculate");
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(200, 200, 242));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Selet Tea Date", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField7MouseClicked(evt);
            }
        });
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField7KeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel5.setText("Transport");

        jTextField8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField8MouseClicked(evt);
            }
        });
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField8KeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel6.setText("Per Kg");

        jDateChooser3.setDateFormatString("yyyy-MM-dd");
        jDateChooser3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setText("To");

        jDateChooser2.setDateFormatString("yyyy-MM-dd");
        jDateChooser2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setText("From");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField8)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField7)
                        .addComponent(jLabel6))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(200, 200, 242));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Select Another Charging Date", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel7.setText("From");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setText("To");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jDateChooser4.setDateFormatString("yyyy-MM-dd");
        jDateChooser4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jDateChooser4, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addGap(34, 34, 34)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(jDateChooser4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton4.setBackground(new java.awt.Color(51, 0, 102));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("<html>Print One <br/> By One</html>");
        jButton4.setContentAreaFilled(false);
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(153, 153, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Print All");
        jButton5.setContentAreaFilled(false);
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(153, 0, 0));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Search");
        jButton6.setContentAreaFilled(false);
        jButton6.setOpaque(true);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField9MouseClicked(evt);
            }
        });
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField9KeyTyped(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        jButton12.setContentAreaFilled(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(0, 0, 153));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Remove Paysheet");
        jButton7.setContentAreaFilled(false);
        jButton7.setOpaque(true);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(51, 102, 255));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Remove \"0\" Weight");
        jButton8.setContentAreaFilled(false);
        jButton8.setOpaque(true);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 51, 51));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("<html>Print <br/> Summary<html/> ");
        jButton9.setContentAreaFilled(false);
        jButton9.setOpaque(true);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
    int dialog = JOptionPane.showConfirmDialog(this, "Do You Sure Calculate ", "Warning", JOptionPane.YES_NO_OPTION);
        if(dialog == JOptionPane.YES_OPTION){
                    TableModel tm = jTable1.getModel();
                    DefaultTableModel dtm = (DefaultTableModel) tm;
                    dtm.setRowCount(0);
                    DecimalFormat df = new DecimalFormat("#.00");
                    DecimalFormat df2 = new DecimalFormat("#");
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String sf_date = sdf.format(jDateChooser2.getDate()).toString();
                    String st_date = sdf.format(jDateChooser3.getDate()).toString();
                    String cf_date = sdf.format(jDateChooser4.getDate()).toString();
                    String ct_date = sdf.format(jDateChooser1.getDate()).toString();
                    double nweight = 0;
                    double nprice = 0;
                    double ntotal = 0;
                    double aweight = 0;
                    double aprice = 0;
                    double atotal = 0;
                    double tprice = 0;
                    double trans = 0;
                    double advance = 0;
                    double chemicle = 0;
                    double otherC = 0;
                    double pohora = 0;
                    double tea_pw = 0;
                    double grocery = 0;
                    double poli_rate = 0;
                    double poli_a = 0;
                    double loan_p = 0;
                    double loan_ab = 0;
                    double dif = 0;
                    double dmpr = 0;
                    double dmpa = 0;
                    
            ResultSet rs1 = DBMS.search("SELECT * FROM customer ORDER BY CAST(id AS unsigned) ASC");
            while (rs1.next()) {                
                  String c_id = rs1.getString("id");
                    nweight = 0;
                    nprice = 0;
                    ntotal = 0;
                    aweight = 0;
                    aprice = 0;
                    atotal = 0;
                    tprice = 0;
                    trans = 0;
                    advance = 0;
                    chemicle = 0;
                    otherC = 0;
                    pohora = 0;
                    tea_pw = 0;
                    grocery = 0;
                    poli_rate = 0;
                    poli_a = 0;
                    loan_p = 0;
                    loan_ab = 0;
                    dif = 0;
                    dmpr = 0;
                    dmpa = 0;
            ResultSet rs2 = DBMS.search("SELECT * FROM group_a_t WHERE `c_id`='"+c_id+"' AND `date` BETWEEN '"+sf_date+"' AND '"+st_date+"'");
            if(rs2.next()==true){
                ResultSet rs3 = DBMS.search("SELECT * FROM loan_cal WHERE `c_id`='"+c_id+"' AND `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                if(rs3.next()==true){
                    //super tea and loan available
                    ResultSet rs5 = DBMS.search("SELECT * FROM stock WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+sf_date+"' AND '"+st_date+"'");
                    while (rs5.next()) {                    
                    String nwei = rs5.getString("weight");
                    int w = Integer.parseInt(nwei);
                    nweight+=w;
                }
                    String nper_kg = jTextField8.getText();
                     nprice = Double.valueOf(nper_kg);

                    ResultSet rs6 = DBMS.search("SELECT * FROM group_a_t WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+sf_date+"' AND '"+st_date+"'");
                    if (rs6.next()) {                    
                    String swei = rs6.getString("weight");
                    String s_ap = rs6.getString("per_price");
                    String s_to = rs6.getString("amount");
                    double w = Double.valueOf(swei);
                    double w1 = Double.valueOf(s_ap);
                    double w2 = Double.valueOf(s_to);
                    aweight = w;
                    aprice = w1;
                    atotal = w2;
                }
                    nweight = nweight-aweight;
                    ntotal = nweight*nprice;
                    tprice = ntotal+atotal;
                    String transport = jTextField7.getText();
                    Double tr = Double.valueOf(transport);
                    trans = (nweight+aweight)*tr;
                    ResultSet rs7 = DBMS.search("SELECT * FROM advance WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                     while (rs7.next()) {                    
                    String primium = rs7.getString("primium");
                    String id = rs7.getString("id");
                    String balance = rs7.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        advance+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        advance+=pri;
                    }else if(pri>=bal){
                        advance+=bal;
                    }
                    String no_bal = df.format(n_bal);
                    String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE advance SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                     }
                     ResultSet rs8 = DBMS.search("SELECT * FROM chemicle WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs8.next()) {                    
                    String primium = rs8.getString("primium");
                    String id = rs8.getString("id");
                    String balance = rs8.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        chemicle+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        chemicle+=pri;
                    }else if(pri>=bal){
                        chemicle+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE chemicle SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                  ResultSet rs9 = DBMS.search("SELECT * FROM othercharge WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs9.next()) {                    
                    String primium = rs9.getString("primium");
                    String id = rs9.getString("id");
                    String balance = rs9.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        otherC+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        otherC+=pri;
                    }else if(pri>=bal){
                        otherC+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE othercharge SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs10 = DBMS.search("SELECT * FROM pohora WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs10.next()) {                    
                    String primium = rs10.getString("primium");
                    String id = rs10.getString("id");
                    String balance = rs10.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        pohora+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        pohora+=pri;
                    }else if(pri>=bal){
                        pohora+=bal;
                    }
                    String no_bal = df.format(n_bal);
                    String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE pohora SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                 ResultSet rs11 = DBMS.search("SELECT * FROM tea_powder WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs11.next()) {                    
                    String primium = rs11.getString("primium");
                    String id = rs11.getString("id");
                    String balance = rs11.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        tea_pw+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        tea_pw+=pri;
                    }else if(pri>=bal){
                        tea_pw+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE tea_powder SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs12 = DBMS.search("SELECT * FROM grocery WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs12.next()) {                    
                    String primium = rs12.getString("primium");
                    String id = rs12.getString("id");
                    String balance = rs12.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        grocery+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        grocery+=pri;
                    }else if(pri>=bal){
                        grocery+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE grocery SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs13 = DBMS.search("SELECT * FROM loan_cal WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs13.next()) {                    
                    String l_id = rs13.getString("l_id");
                    String pa = rs13.getString("pa");
                    String lp = rs13.getString("lp");
                    String ab = rs13.getString("ab");
                    Double d_pa = Double.valueOf(pa);
                    Double d_lp = Double.valueOf(lp);
                    Double d_ab = Double.valueOf(ab);
                        poli_a+=d_pa;
                        loan_p+=d_lp;
                        loan_ab+=d_ab;
                }
                ResultSet rs14 = DBMS.search("SELECT * FROM loan_cal WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                if(rs14.next()){
                    String pr = rs14.getString("pr");
                    Double d_pr = Double.valueOf(pr);
                    poli_rate+=d_pr;
                }
                 ResultSet rs15 = DBMS.search("SELECT * FROM dificit_money WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs15.next()) {                    
                    String id = rs15.getString("id");
                    String di = rs15.getString("dificit_m");
                    dif = Double.valueOf(di);
                }
                ResultSet rs16 = DBMS.search("SELECT * FROM dificit_m_poli WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs16.next()) {                    
                    String id = rs16.getString("id");
                    String d_mpr = rs16.getString("poli_rate");
                    String d_mpa = rs16.getString("poli_amount");
                    dmpr = Double.valueOf(d_mpr);
                    dmpa = Double.valueOf(d_mpa);
                }
                double total_mins = trans+advance+chemicle+otherC+pohora+tea_pw+grocery+poli_a+loan_p+dif+dmpa;
                double total1 = tprice-total_mins;
                String s_nw = df2.format(nweight);
                String s_np = df.format(nprice);
                String s_nt = df.format(ntotal);
                String s_aw = df2.format(aweight);
                String s_ap = df.format(aprice);
                String s_at = df.format(atotal);
                String s_tp = df.format(tprice);
                String s_tran = df.format(trans);
                String s_adv = df.format(advance);
                String s_chem = df.format(chemicle);
                String s_otc = df.format(otherC);
                String s_ph = df.format(pohora);
                String s_tpw = df.format(tea_pw);
                String s_gro = df.format(grocery);
                String s_pr = df.format(poli_rate);
                String s_pa = df.format(poli_a);
                String s_lp = df.format(loan_p);
                String s_lab = df.format(loan_ab);
                String s_dif = df.format(dif);
                String s_dmpa = df.format(dmpa);
                String s_dmpr = String.valueOf(dmpr);
                String s_total1 = df.format(total1);
                String pg = "A";
DBMS.iud("INSERT INTO payment (`c_id`,`nweight`,`nprice`,`ntotal`,`aweight`,`aprice`,`atotal`,`tprice`,`trans`,`advance`,`chemicle`,`otherC`,`pohora`,`tea_pw`,`grocery`,`poli_r`,`poli_a`,`loan_p`,`loan_ab`,`dificit_money`,`balance`,`f_date`,`t_date`,`pg`,`dmpr`,`dmpa`)VALUES('"+c_id+"','"+s_nw+"','"+s_np+"','"+s_nt+"','"+s_aw+"','"+s_ap+"','"+s_at+"','"+s_tp+"','"+s_tran+"','"+s_adv+"','"+s_chem+"','"+s_otc+"','"+s_ph+"','"+s_tpw+"','"+s_gro+"','"+s_pr+"','"+s_pa+"','"+s_lp+"','"+s_lab+"','"+s_dif+"','"+s_total1+"','"+sf_date+"','"+st_date+"','"+pg+"','"+s_dmpr+"','"+s_dmpa+"')");
                 Vector<String> v = new Vector<>();
                v.add(c_id);
                v.add(s_nw);
                v.add(s_np);
                v.add(s_nt);
                v.add(s_aw);
                v.add(s_ap);
                v.add(s_at);
                v.add(s_tp);
                v.add(sf_date);
                v.add(st_date);
                v.add(s_tran);
                v.add(s_adv);
                v.add(s_ph);
                v.add(s_chem);
                v.add(s_otc);
                v.add(s_tpw);
                v.add(s_gro);
                v.add(s_pr);
                v.add(s_pa);
                v.add(s_lp);
                v.add(s_lab);
                v.add(s_dif);
                v.add(s_total1);
                v.add(s_dmpa);
                v.add(pg);
                dtm.addRow(v);
                if(total1<0){
                     DecimalFormat def1 = new DecimalFormat("#.00");
                    double n_total1 = -1 * total1;
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                     String tt = def1.format(n_total1);
                    DBMS.iud("INSERT INTO dificit_money(`c_id`,`dificit_m`,`date`) VALUES('"+c_id+"','"+tt+"','"+fdate+"')");
                }
    
                }else{
                    //super tea available but no loan 
                      ResultSet rs5 = DBMS.search("SELECT * FROM stock WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+sf_date+"' AND '"+st_date+"'");
                    while (rs5.next()) {                    
                    String nwei = rs5.getString("weight");
                    int w = Integer.parseInt(nwei);
                    nweight+=w;
                }
                    String nper_kg = jTextField8.getText();
                     nprice = Double.valueOf(nper_kg);
                    ResultSet rs6 = DBMS.search("SELECT * FROM group_a_t WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+sf_date+"' AND '"+st_date+"'");
                    if (rs6.next()) {                    
                    String swei = rs6.getString("weight");
                    String s_ap = rs6.getString("per_price");
                    String s_to = rs6.getString("amount");
                    double w = Double.valueOf(swei);
                    double w1 = Double.valueOf(s_ap);
                    double w2 = Double.valueOf(s_to);
                    aweight = w;
                    aprice = w1;
                    atotal = w2;
                }
                    nweight = nweight-aweight;
                    ntotal = nweight*nprice;
                    tprice = ntotal+atotal;
                    String transport = jTextField7.getText();
                    Double tr = Double.valueOf(transport);
                    trans = (nweight+aweight)*tr;
                    ResultSet rs7 = DBMS.search("SELECT * FROM advance WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                     while (rs7.next()) {                    
                    String primium = rs7.getString("primium");
                    String id = rs7.getString("id");
                    String balance = rs7.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        advance+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        advance+=pri;
                    }else if(pri>=bal){
                        advance+=bal;
                    }
                    String no_bal = df.format(n_bal);
                    String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE advance SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                     }
                     ResultSet rs8 = DBMS.search("SELECT * FROM chemicle WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs8.next()) {                    
                    String primium = rs8.getString("primium");
                    String id = rs8.getString("id");
                    String balance = rs8.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        chemicle+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        chemicle+=pri;
                    }else if(pri>=bal){
                        chemicle+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE chemicle SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                  ResultSet rs9 = DBMS.search("SELECT * FROM othercharge WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs9.next()) {                    
                    String primium = rs9.getString("primium");
                    String id = rs9.getString("id");
                    String balance = rs9.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        otherC+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        otherC+=pri;
                    }else if(pri>=bal){
                        otherC+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE othercharge SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs10 = DBMS.search("SELECT * FROM pohora WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs10.next()) {                    
                    String primium = rs10.getString("primium");
                    String id = rs10.getString("id");
                    String balance = rs10.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        pohora+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        pohora+=pri;
                    }else if(pri>=bal){
                        pohora+=bal;
                    }
                    String no_bal = df.format(n_bal);
                    String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE pohora SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                 ResultSet rs11 = DBMS.search("SELECT * FROM tea_powder WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs11.next()) {                    
                    String primium = rs11.getString("primium");
                    String id = rs11.getString("id");
                    String balance = rs11.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        tea_pw+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        tea_pw+=pri;
                    }else if(pri>=bal){
                        tea_pw+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE tea_powder SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs12 = DBMS.search("SELECT * FROM grocery WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs12.next()) {                    
                    String primium = rs12.getString("primium");
                    String id = rs12.getString("id");
                    String balance = rs12.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        grocery+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        grocery+=pri;
                    }else if(pri>=bal){
                        grocery+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE grocery SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                
                 ResultSet rs15 = DBMS.search("SELECT * FROM dificit_money WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs15.next()) {                    
                    String id = rs15.getString("id");
                    String di = rs15.getString("dificit_m");
                    dif = Double.valueOf(di);
                }
                ResultSet rs16 = DBMS.search("SELECT * FROM dificit_m_poli WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs16.next()) {                    
                    String id = rs16.getString("id");
                    String d_mpr = rs16.getString("poli_rate");
                    String d_mpa = rs16.getString("poli_amount");
                    dmpr = Double.valueOf(d_mpr);
                    dmpa = Double.valueOf(d_mpa);
                }
                double total_mins = trans+advance+chemicle+otherC+pohora+tea_pw+grocery+poli_a+loan_p+dif+dmpa;
                double total1 = tprice-total_mins;
                String s_nw = df2.format(nweight);
                String s_np = df.format(nprice);
                String s_nt = df.format(ntotal);
                String s_aw = df2.format(aweight);
                String s_ap = df.format(aprice);
                String s_at = df.format(atotal);
                String s_tp = df.format(tprice);
                String s_tran = df.format(trans);
                String s_adv = df.format(advance);
                String s_chem = df.format(chemicle);
                String s_otc = df.format(otherC);
                String s_ph = df.format(pohora);
                String s_tpw = df.format(tea_pw);
                String s_gro = df.format(grocery);
                String s_pr = df.format(poli_rate);
                String s_pa = df.format(poli_a);
                String s_lp = df.format(loan_p);
                String s_lab = df.format(loan_ab);
                String s_dif = df.format(dif);
                String s_dmpa = df.format(dmpa);
                String s_dmpr = String.valueOf(dmpr);
                String s_total1 = df.format(total1);
                String pg = "B";
DBMS.iud("INSERT INTO payment (`c_id`,`nweight`,`nprice`,`ntotal`,`aweight`,`aprice`,`atotal`,`tprice`,`trans`,`advance`,`chemicle`,`otherC`,`pohora`,`tea_pw`,`grocery`,`poli_r`,`poli_a`,`loan_p`,`loan_ab`,`dificit_money`,`balance`,`f_date`,`t_date`,`pg`,`dmpr`,`dmpa`)VALUES('"+c_id+"','"+s_nw+"','"+s_np+"','"+s_nt+"','"+s_aw+"','"+s_ap+"','"+s_at+"','"+s_tp+"','"+s_tran+"','"+s_adv+"','"+s_chem+"','"+s_otc+"','"+s_ph+"','"+s_tpw+"','"+s_gro+"','"+s_pr+"','"+s_pa+"','"+s_lp+"','"+s_lab+"','"+s_dif+"','"+s_total1+"','"+sf_date+"','"+st_date+"','"+pg+"','"+s_dmpr+"','"+s_dmpa+"')");
                 Vector<String> v = new Vector<>();
                v.add(c_id);
                v.add(s_nw);
                v.add(s_np);
                v.add(s_nt);
                v.add(s_aw);
                v.add(s_ap);
                v.add(s_at);
                v.add(s_tp);
                v.add(sf_date);
                v.add(st_date);
                v.add(s_tran);
                v.add(s_adv);
                v.add(s_ph);
                v.add(s_chem);
                v.add(s_otc);
                v.add(s_tpw);
                v.add(s_gro);
                v.add(s_pr);
                v.add(s_pa);
                v.add(s_lp);
                v.add(s_lab);
                v.add(s_dif);
                v.add(s_dmpa);
                v.add(s_total1);
                v.add(pg);
                dtm.addRow(v);
                if(total1<0){
                     DecimalFormat def1 = new DecimalFormat("#.00");
                    double n_total1 = -1 * total1;
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                     String tt = def1.format(n_total1);
                    DBMS.iud("INSERT INTO dificit_money(`c_id`,`dificit_m`,`date`) VALUES('"+c_id+"','"+tt+"','"+fdate+"')");
                }
                }
            }else{
                 ResultSet rs4 = DBMS.search("SELECT * FROM loan_cal WHERE `c_id`='"+c_id+"' AND `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                if(rs4.next()==true){
                    //super tea no but loan available
                      ResultSet rs5 = DBMS.search("SELECT * FROM stock WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+sf_date+"' AND '"+st_date+"'");
                    while (rs5.next()) {                    
                    String nwei = rs5.getString("weight");
                    int w = Integer.parseInt(nwei);
                    nweight+=w;
                }
                    String nper_kg = jTextField8.getText();
                     nprice = Double.valueOf(nper_kg);
                   
                    ntotal = nweight*nprice;
                    tprice = ntotal+atotal;
                    String transport = jTextField7.getText();
                    Double tr = Double.valueOf(transport);
                    trans = (nweight+aweight)*tr;
                    ResultSet rs7 = DBMS.search("SELECT * FROM advance WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                     while (rs7.next()) {                    
                    String primium = rs7.getString("primium");
                    String id = rs7.getString("id");
                    String balance = rs7.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        advance+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        advance+=pri;
                    }else if(pri>=bal){
                        advance+=bal;
                    }
                    String no_bal = df.format(n_bal);
                    String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE advance SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                     }
                     ResultSet rs8 = DBMS.search("SELECT * FROM chemicle WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs8.next()) {                    
                    String primium = rs8.getString("primium");
                    String id = rs8.getString("id");
                    String balance = rs8.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        chemicle+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        chemicle+=pri;
                    }else if(pri>=bal){
                        chemicle+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE chemicle SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                  ResultSet rs9 = DBMS.search("SELECT * FROM othercharge WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs9.next()) {                    
                    String primium = rs9.getString("primium");
                    String id = rs9.getString("id");
                    String balance = rs9.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        otherC+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        otherC+=pri;
                    }else if(pri>=bal){
                        otherC+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE othercharge SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs10 = DBMS.search("SELECT * FROM pohora WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs10.next()) {                    
                    String primium = rs10.getString("primium");
                    String id = rs10.getString("id");
                    String balance = rs10.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        pohora+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        pohora+=pri;
                    }else if(pri>=bal){
                        pohora+=bal;
                    }
                    String no_bal = df.format(n_bal);
                    String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE pohora SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                 ResultSet rs11 = DBMS.search("SELECT * FROM tea_powder WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs11.next()) {                    
                    String primium = rs11.getString("primium");
                    String id = rs11.getString("id");
                    String balance = rs11.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        tea_pw+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        tea_pw+=pri;
                    }else if(pri>=bal){
                        tea_pw+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE tea_powder SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs12 = DBMS.search("SELECT * FROM grocery WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs12.next()) {                    
                    String primium = rs12.getString("primium");
                    String id = rs12.getString("id");
                    String balance = rs12.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        grocery+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        grocery+=pri;
                    }else if(pri>=bal){
                        grocery+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE grocery SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs13 = DBMS.search("SELECT * FROM loan_cal WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs13.next()) {                    
                    String l_id = rs13.getString("l_id");
                    String pa = rs13.getString("pa");
                    String lp = rs13.getString("lp");
                    String ab = rs13.getString("ab");
                    Double d_pa = Double.valueOf(pa);
                    Double d_lp = Double.valueOf(lp);
                    Double d_ab = Double.valueOf(ab);
                        poli_a+=d_pa;
                        loan_p+=d_lp;
                        loan_ab+=d_ab;
                }
                ResultSet rs14 = DBMS.search("SELECT * FROM loan_cal WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                if(rs14.next()){
                    String pr = rs14.getString("pr");
                    Double d_pr = Double.valueOf(pr);
                    poli_rate+=d_pr;
                }
                 ResultSet rs15 = DBMS.search("SELECT * FROM dificit_money WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs15.next()) {                    
                    String id = rs15.getString("id");
                    String di = rs15.getString("dificit_m");
                    dif = Double.valueOf(di);
                }
                ResultSet rs16 = DBMS.search("SELECT * FROM dificit_m_poli WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs16.next()) {                    
                    String id = rs16.getString("id");
                    String d_mpr = rs16.getString("poli_rate");
                    String d_mpa = rs16.getString("poli_amount");
                    dmpr = Double.valueOf(d_mpr);
                    dmpa = Double.valueOf(d_mpa);
                }
                double total_mins = trans+advance+chemicle+otherC+pohora+tea_pw+grocery+poli_a+loan_p+dif+dmpa;
                double total1 = tprice-total_mins;
                String s_nw = df2.format(nweight);
                String s_np = df.format(nprice);
                String s_nt = df.format(ntotal);
                String s_aw = df2.format(aweight);
                String s_ap = df.format(aprice);
                String s_at = df.format(atotal);
                String s_tp = df.format(tprice);
                String s_tran = df.format(trans);
                String s_adv = df.format(advance);
                String s_chem = df.format(chemicle);
                String s_otc = df.format(otherC);
                String s_ph = df.format(pohora);
                String s_tpw = df.format(tea_pw);
                String s_gro = df.format(grocery);
                String s_pr = df.format(poli_rate);
                String s_pa = df.format(poli_a);
                String s_lp = df.format(loan_p);
                String s_lab = df.format(loan_ab);
                String s_dif = df.format(dif);
                String s_dmpa = df.format(dmpa);
                String s_dmpr = String.valueOf(dmpr);
                String s_total1 = df.format(total1);
                String pg = "A";
DBMS.iud("INSERT INTO payment (`c_id`,`nweight`,`nprice`,`ntotal`,`aweight`,`aprice`,`atotal`,`tprice`,`trans`,`advance`,`chemicle`,`otherC`,`pohora`,`tea_pw`,`grocery`,`poli_r`,`poli_a`,`loan_p`,`loan_ab`,`dificit_money`,`balance`,`f_date`,`t_date`,`pg`,`dmpr`,`dmpa`)VALUES('"+c_id+"','"+s_nw+"','"+s_np+"','"+s_nt+"','"+s_aw+"','"+s_ap+"','"+s_at+"','"+s_tp+"','"+s_tran+"','"+s_adv+"','"+s_chem+"','"+s_otc+"','"+s_ph+"','"+s_tpw+"','"+s_gro+"','"+s_pr+"','"+s_pa+"','"+s_lp+"','"+s_lab+"','"+s_dif+"','"+s_total1+"','"+sf_date+"','"+st_date+"','"+pg+"','"+s_dmpr+"','"+s_dmpa+"')");
                 Vector<String> v = new Vector<>();
                v.add(c_id);
                v.add(s_nw);
                v.add(s_np);
                v.add(s_nt);
                v.add(s_aw);
                v.add(s_ap);
                v.add(s_at);
                v.add(s_tp);
                v.add(sf_date);
                v.add(st_date);
                v.add(s_tran);
                v.add(s_adv);
                v.add(s_ph);
                v.add(s_chem);
                v.add(s_otc);
                v.add(s_tpw);
                v.add(s_gro);
                v.add(s_pr);
                v.add(s_pa);
                v.add(s_lp);
                v.add(s_lab);
                v.add(s_dif);
                v.add(s_dmpa);
                v.add(s_total1);
                v.add(pg);
                dtm.addRow(v);
                if(total1<0){
                     DecimalFormat def1 = new DecimalFormat("#.00");
                    double n_total1 = -1 * total1;
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                     String tt = def1.format(n_total1);
                    DBMS.iud("INSERT INTO dificit_money(`c_id`,`dificit_m`,`date`) VALUES('"+c_id+"','"+tt+"','"+fdate+"')");
                }
                }else{
                    //super tea no and no loan 
                      ResultSet rs5 = DBMS.search("SELECT * FROM stock WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+sf_date+"' AND '"+st_date+"'");
                    while (rs5.next()) {                    
                    String nwei = rs5.getString("weight");
                    int w = Integer.parseInt(nwei);
                    nweight+=w;
                }
                   String nper_kg = jTextField8.getText();
                     nprice = Double.valueOf(nper_kg);
                    ntotal = nweight*nprice;
                    tprice = ntotal+atotal;
                    String transport = jTextField7.getText();
                    Double tr = Double.valueOf(transport);
                    trans = (nweight+aweight)*tr;
                    ResultSet rs7 = DBMS.search("SELECT * FROM advance WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                     while (rs7.next()) {                    
                    String primium = rs7.getString("primium");
                    String id = rs7.getString("id");
                    String balance = rs7.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        advance+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        advance+=pri;
                    }else if(pri>=bal){
                        advance+=bal;
                    }
                    String no_bal = df.format(n_bal);
                    String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE advance SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                     }
                     ResultSet rs8 = DBMS.search("SELECT * FROM chemicle WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs8.next()) {                    
                    String primium = rs8.getString("primium");
                    String id = rs8.getString("id");
                    String balance = rs8.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        chemicle+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        chemicle+=pri;
                    }else if(pri>=bal){
                        chemicle+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE chemicle SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                  ResultSet rs9 = DBMS.search("SELECT * FROM othercharge WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs9.next()) {                    
                    String primium = rs9.getString("primium");
                    String id = rs9.getString("id");
                    String balance = rs9.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        otherC+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        otherC+=pri;
                    }else if(pri>=bal){
                        otherC+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE othercharge SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs10 = DBMS.search("SELECT * FROM pohora WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs10.next()) {                    
                    String primium = rs10.getString("primium");
                    String id = rs10.getString("id");
                    String balance = rs10.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        pohora+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        pohora+=pri;
                    }else if(pri>=bal){
                        pohora+=bal;
                    }
                    String no_bal = df.format(n_bal);
                    String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE pohora SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                 ResultSet rs11 = DBMS.search("SELECT * FROM tea_powder WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs11.next()) {                    
                    String primium = rs11.getString("primium");
                    String id = rs11.getString("id");
                    String balance = rs11.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        tea_pw+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        tea_pw+=pri;
                    }else if(pri>=bal){
                        tea_pw+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE tea_powder SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                ResultSet rs12 = DBMS.search("SELECT * FROM grocery WHERE `c_id`='"+c_id+"' AND  `up_date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs12.next()) {                    
                    String primium = rs12.getString("primium");
                    String id = rs12.getString("id");
                    String balance = rs12.getString("balance");
                    Double pri = Double.valueOf(primium);
                    Double bal = Double.valueOf(balance);
                    double n_bal = 0;
                    if(pri<=bal){
                        grocery+=pri;
                        n_bal = bal-pri;
                    }else if(pri==bal){
                        grocery+=pri;
                    }else if(pri>=bal){
                        grocery+=bal;
                    }
                    String no_bal = df.format(n_bal);
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                   DBMS.iud("UPDATE grocery SET `balance`='"+no_bal+"',`up_date`='"+fdate+"' WHERE `id`='"+id+"'");
                }
                
                 ResultSet rs15 = DBMS.search("SELECT * FROM dificit_money WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs15.next()) {                    
                    String id = rs15.getString("id");
                    String di = rs15.getString("dificit_m");
                    dif = Double.valueOf(di);
                }
                ResultSet rs16 = DBMS.search("SELECT * FROM dificit_m_poli WHERE `c_id`='"+c_id+"' AND  `date` BETWEEN '"+cf_date+"' AND '"+ct_date+"'");
                while (rs16.next()) {                    
                    String id = rs16.getString("id");
                    String d_mpr = rs16.getString("poli_rate");
                    String d_mpa = rs16.getString("poli_amount");
                    dmpr = Double.valueOf(d_mpr);
                    dmpa = Double.valueOf(d_mpa);
                }
                double total_mins = trans+advance+chemicle+otherC+pohora+tea_pw+grocery+poli_a+loan_p+dif+dmpa;
                double total1 = tprice-total_mins;
                String s_nw = df2.format(nweight);
                String s_np = df.format(nprice);
                String s_nt = df.format(ntotal);
                String s_aw = df2.format(aweight);
                String s_ap = df.format(aprice);
                String s_at = df.format(atotal);
                String s_tp = df.format(tprice);
                String s_tran = df.format(trans);
                String s_adv = df.format(advance);
                String s_chem = df.format(chemicle);
                String s_otc = df.format(otherC);
                String s_ph = df.format(pohora);
                String s_tpw = df.format(tea_pw);
                String s_gro = df.format(grocery);
                String s_pr = df.format(poli_rate);
                String s_pa = df.format(poli_a);
                String s_lp = df.format(loan_p);
                String s_lab = df.format(loan_ab);
                String s_dif = df.format(dif);
                String s_dmpa = df.format(dmpa);
                String s_dmpr = String.valueOf(dmpr);
                String s_total1 = df.format(total1);
                String pg = "B";
DBMS.iud("INSERT INTO payment (`c_id`,`nweight`,`nprice`,`ntotal`,`aweight`,`aprice`,`atotal`,`tprice`,`trans`,`advance`,`chemicle`,`otherC`,`pohora`,`tea_pw`,`grocery`,`poli_r`,`poli_a`,`loan_p`,`loan_ab`,`dificit_money`,`balance`,`f_date`,`t_date`,`pg`,`dmpr`,`dmpa`)VALUES('"+c_id+"','"+s_nw+"','"+s_np+"','"+s_nt+"','"+s_aw+"','"+s_ap+"','"+s_at+"','"+s_tp+"','"+s_tran+"','"+s_adv+"','"+s_chem+"','"+s_otc+"','"+s_ph+"','"+s_tpw+"','"+s_gro+"','"+s_pr+"','"+s_pa+"','"+s_lp+"','"+s_lab+"','"+s_dif+"','"+s_total1+"','"+sf_date+"','"+st_date+"','"+pg+"','"+s_dmpr+"','"+s_dmpa+"')");
                 Vector<String> v = new Vector<>();
                v.add(c_id);
                v.add(s_nw);
                v.add(s_np);
                v.add(s_nt);
                v.add(s_aw);
                v.add(s_ap);
                v.add(s_at);
                v.add(s_tp);
                v.add(sf_date);
                v.add(st_date);
                v.add(s_tran);
                v.add(s_adv);
                v.add(s_ph);
                v.add(s_chem);
                v.add(s_otc);
                v.add(s_tpw);
                v.add(s_gro);
                v.add(s_pr);
                v.add(s_pa);
                v.add(s_lp);
                v.add(s_lab);
                v.add(s_dif);
                v.add(s_dmpa);
                v.add(s_total1);
                v.add(pg);
                dtm.addRow(v);
                if(total1<0){
                     DecimalFormat def1 = new DecimalFormat("#.00");
                    double n_total1 = -1 * total1;
                     String d = "20";
                     String gym = ct_date.substring(0, 8);
                     String fdate = gym.concat(d);
                     String tt = def1.format(n_total1);
                    DBMS.iud("INSERT INTO dificit_money(`c_id`,`dificit_m`,`date`) VALUES('"+c_id+"','"+tt+"','"+fdate+"')");
                }
                }
            }
            }
         JOptionPane.showMessageDialog(this, "End Calculate Paysheet", "Success", JOptionPane.INFORMATION_MESSAGE);   
        }
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7MouseClicked

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7KeyTyped

    private void jTextField8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8MouseClicked

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8KeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         int row = jTable1.getSelectedRow();
        if(row!=-1){
            String id = jTable1.getValueAt(row, 0).toString();
            String f_date = jTable1.getValueAt(row, 8).toString();
            String pg = jTable1.getValueAt(row, 24).toString();
            paysheet pay = new paysheet(id, f_date,pg);
            JOptionPane.showMessageDialog(this, "Print Paysheet", "Success", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Please Select Payment", "Print Paysheet", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
 try{
        int raw = jTable1.getRowCount();
        int dialog = JOptionPane.showConfirmDialog(this, "Do You Sure Printing ", "Warning", JOptionPane.YES_NO_OPTION);
        if(dialog == JOptionPane.YES_OPTION){
            for(int x = 0;x<raw;x++){
                String id = jTable1.getValueAt(x, 0).toString();
                String f_date = jTable1.getValueAt(x, 8).toString();
                String pg = jTable1.getValueAt(x, 24).toString();
                paysheet pay = new paysheet(id, f_date,pg);
                System.out.println("ok");
                Thread.sleep(5000);
        }
            JOptionPane.showMessageDialog(this, "End Printing Paysheet", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
 }catch(Exception e){
     System.err.println(e);
 }   
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
       try{
        String id = jTextField9.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String cf_date = sdf.format(jDateChooser2.getDate()).toString();
        String ct_date = sdf.format(jDateChooser3.getDate()).toString();
        if(!id.isEmpty()){
             ResultSet rs1 = DBMS.search("SELECT * FROM customer WHERE `id`='"+id+"' ");
            if(rs1.next()==true){
                 try {
                     ResultSet rs = DBMS.search("SELECT * FROM payment WHERE `c_id`='"+id+"' AND `f_date`='"+cf_date+"' AND `t_date`='"+ct_date+"'");
                     
                     TableModel tm = jTable1.getModel();
                     DefaultTableModel dtm = (DefaultTableModel) tm;
                     dtm.setRowCount(0);
                     
                     while (rs.next()) {
                             Vector<String> v = new Vector<>();
                         v.add(rs.getString("c_id"));
                         v.add(rs.getString("nweight"));
                         v.add(rs.getString("nprice"));
                         v.add(rs.getString("ntotal"));
                         v.add(rs.getString("aweight"));
                         v.add(rs.getString("aprice"));
                         v.add(rs.getString("atotal"));
                         v.add(rs.getString("tprice"));
                         v.add(rs.getString("f_date"));
                         v.add(rs.getString("t_date"));
                         v.add(rs.getString("trans"));
                         v.add(rs.getString("advance"));
                         v.add(rs.getString("pohora"));
                         v.add(rs.getString("chemicle"));
                         v.add(rs.getString("otherC"));
                         v.add(rs.getString("tea_pw"));
                         v.add(rs.getString("grocery"));
                         v.add(rs.getString("poli_r"));
                         v.add(rs.getString("poli_a"));
                         v.add(rs.getString("loan_p"));
                         v.add(rs.getString("loan_ab"));
                         v.add(rs.getString("dificit_money"));
                         v.add(rs.getString("dmpa"));
                         v.add(rs.getString("balance"));
                         v.add(rs.getString("pg"));
                         dtm.addRow(v);
                        
                     }      
                 } catch (SQLException ex) {
                     Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
                 }
        }else{
                JOptionPane.showMessageDialog(this, "Invalied Id", "Stock", JOptionPane.INFORMATION_MESSAGE);
                    jTextField9.setText("");
                    jTextField9.grabFocus();
            }
       }else{
            //date range
            try {
                     ResultSet rs = DBMS.search("SELECT * FROM payment WHERE `f_date`='"+cf_date+"' AND `t_date`='"+ct_date+"' ORDER BY CAST(c_id AS unsigned) ASC");
                     TableModel tm = jTable1.getModel();
                     DefaultTableModel dtm = (DefaultTableModel) tm;
                     dtm.setRowCount(0);
                     
                     while (rs.next()) {
                             Vector<String> v = new Vector<>();
                          v.add(rs.getString("c_id"));
                         v.add(rs.getString("nweight"));
                         v.add(rs.getString("nprice"));
                         v.add(rs.getString("ntotal"));
                         v.add(rs.getString("aweight"));
                         v.add(rs.getString("aprice"));
                         v.add(rs.getString("atotal"));
                         v.add(rs.getString("tprice"));
                         v.add(rs.getString("f_date"));
                         v.add(rs.getString("t_date"));
                         v.add(rs.getString("trans"));
                         v.add(rs.getString("advance"));
                         v.add(rs.getString("pohora"));
                         v.add(rs.getString("chemicle"));
                         v.add(rs.getString("otherC"));
                         v.add(rs.getString("tea_pw"));
                         v.add(rs.getString("grocery"));
                         v.add(rs.getString("poli_r"));
                         v.add(rs.getString("poli_a"));
                         v.add(rs.getString("loan_p"));
                         v.add(rs.getString("loan_ab"));
                         v.add(rs.getString("dificit_money"));
                         v.add(rs.getString("dmpa"));
                         v.add(rs.getString("balance"));
                         v.add(rs.getString("pg"));
                         dtm.addRow(v);
                        
                     }      
                 } catch (SQLException ex) {
                     Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
                 }
        }
       }catch(Exception e){
           System.out.println(e);
       }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField9MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9MouseClicked

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9KeyTyped

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        TableModel tm = jTable1.getModel();
        DefaultTableModel dtm = (DefaultTableModel) tm;
        dtm.setRowCount(0);
        jTextField9.setText("");
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if(row!=-1){
            String id = jTable1.getValueAt(row, 0).toString();
            TableModel tm = jTable1.getModel();
            DefaultTableModel dtm = (DefaultTableModel) tm;
            dtm.removeRow(row);
            JOptionPane.showMessageDialog(this, "Remove Selected Payment", "Success", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Please Select Payment", "Remove Payment", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int rc = jTable1.getRowCount();
        TableModel tm = jTable1.getModel();
        DefaultTableModel dtm = (DefaultTableModel) tm;
        for (int x = 0; x < rc; x++) {
            String n_w = jTable1.getValueAt(x, 7).toString();
            if(n_w.equals("0")|n_w.equals("0.00")|n_w.equals("0.0")|n_w.equals(".00")){
                dtm.removeRow(x);
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String cf_date = sdf.format(jDateChooser2.getDate()).toString();
        String ct_date = sdf.format(jDateChooser3.getDate()).toString();
        su s = new su(cf_date, ct_date);
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
